//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoolMvcBlog.SlowService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SlowService.IVerySlowService")]
    public interface IVerySlowService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVerySlowService/GetCurrentDateTime", ReplyAction="http://tempuri.org/IVerySlowService/GetCurrentDateTimeResponse")]
        System.DateTime GetCurrentDateTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVerySlowService/GetCurrentDateTime", ReplyAction="http://tempuri.org/IVerySlowService/GetCurrentDateTimeResponse")]
        System.IAsyncResult BeginGetCurrentDateTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetCurrentDateTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVerySlowService/GetCurrentWeather", ReplyAction="http://tempuri.org/IVerySlowService/GetCurrentWeatherResponse")]
        string GetCurrentWeather(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVerySlowService/GetCurrentWeather", ReplyAction="http://tempuri.org/IVerySlowService/GetCurrentWeatherResponse")]
        System.IAsyncResult BeginGetCurrentWeather(string zipcode, System.AsyncCallback callback, object asyncState);
        
        string EndGetCurrentWeather(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVerySlowServiceChannel : CoolMvcBlog.SlowService.IVerySlowService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentWeatherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentWeatherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerySlowServiceClient : System.ServiceModel.ClientBase<CoolMvcBlog.SlowService.IVerySlowService>, CoolMvcBlog.SlowService.IVerySlowService {
        
        private BeginOperationDelegate onBeginGetCurrentDateTimeDelegate;
        
        private EndOperationDelegate onEndGetCurrentDateTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentDateTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentWeatherDelegate;
        
        private EndOperationDelegate onEndGetCurrentWeatherDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentWeatherCompletedDelegate;
        
        public VerySlowServiceClient() {
        }
        
        public VerySlowServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VerySlowServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VerySlowServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VerySlowServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCurrentDateTimeCompletedEventArgs> GetCurrentDateTimeCompleted;
        
        public event System.EventHandler<GetCurrentWeatherCompletedEventArgs> GetCurrentWeatherCompleted;
        
        public System.DateTime GetCurrentDateTime() {
            return base.Channel.GetCurrentDateTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentDateTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentDateTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetCurrentDateTime(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentDateTime(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentDateTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCurrentDateTime(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentDateTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetCurrentDateTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentDateTimeCompleted(object state) {
            if ((this.GetCurrentDateTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentDateTimeCompleted(this, new GetCurrentDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentDateTimeAsync() {
            this.GetCurrentDateTimeAsync(null);
        }
        
        public void GetCurrentDateTimeAsync(object userState) {
            if ((this.onBeginGetCurrentDateTimeDelegate == null)) {
                this.onBeginGetCurrentDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentDateTime);
            }
            if ((this.onEndGetCurrentDateTimeDelegate == null)) {
                this.onEndGetCurrentDateTimeDelegate = new EndOperationDelegate(this.OnEndGetCurrentDateTime);
            }
            if ((this.onGetCurrentDateTimeCompletedDelegate == null)) {
                this.onGetCurrentDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentDateTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentDateTimeDelegate, null, this.onEndGetCurrentDateTimeDelegate, this.onGetCurrentDateTimeCompletedDelegate, userState);
        }
        
        public string GetCurrentWeather(string zipcode) {
            return base.Channel.GetCurrentWeather(zipcode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentWeather(string zipcode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentWeather(zipcode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCurrentWeather(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentWeather(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentWeather(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zipcode = ((string)(inValues[0]));
            return this.BeginGetCurrentWeather(zipcode, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentWeather(System.IAsyncResult result) {
            string retVal = this.EndGetCurrentWeather(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentWeatherCompleted(object state) {
            if ((this.GetCurrentWeatherCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentWeatherCompleted(this, new GetCurrentWeatherCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentWeatherAsync(string zipcode) {
            this.GetCurrentWeatherAsync(zipcode, null);
        }
        
        public void GetCurrentWeatherAsync(string zipcode, object userState) {
            if ((this.onBeginGetCurrentWeatherDelegate == null)) {
                this.onBeginGetCurrentWeatherDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentWeather);
            }
            if ((this.onEndGetCurrentWeatherDelegate == null)) {
                this.onEndGetCurrentWeatherDelegate = new EndOperationDelegate(this.OnEndGetCurrentWeather);
            }
            if ((this.onGetCurrentWeatherCompletedDelegate == null)) {
                this.onGetCurrentWeatherCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentWeatherCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentWeatherDelegate, new object[] {
                        zipcode}, this.onEndGetCurrentWeatherDelegate, this.onGetCurrentWeatherCompletedDelegate, userState);
        }
    }
}
