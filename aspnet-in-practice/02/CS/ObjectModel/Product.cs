//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ObjectModel
{
    public partial class Product
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get;
            set;
        }
    
        public virtual string ProductName
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SupplierID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CategoryID
        {
            get;
            set;
        }
    
        public virtual string QuantityPerUnit
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> UnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsInStock
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsOnOrder
        {
            get;
            set;
        }
    
        public virtual Nullable<short> ReorderLevel
        {
            get;
            set;
        }
    
        public virtual bool Discontinued
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Order_Detail> Order_Details
        {
            get
            {
                if (_order_Details == null)
                {
                    var newCollection = new FixupCollection<Order_Detail>();
                    newCollection.CollectionChanged += FixupOrder_Details;
                    _order_Details = newCollection;
                }
                return _order_Details;
            }
            set
            {
                if (!ReferenceEquals(_order_Details, value))
                {
                    var previousValue = _order_Details as FixupCollection<Order_Detail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOrder_Details;
                    }
                    _order_Details = value;
                    var newValue = value as FixupCollection<Order_Detail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOrder_Details;
                    }
                }
            }
        }
        private ICollection<Order_Detail> _order_Details;

        #endregion
        #region Association Fixup
    
        private void FixupOrder_Details(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Order_Detail item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Order_Detail item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }

        #endregion
    }
}
